// <auto-generated />
using System;
using AnalisisProyecto.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnalisisProyecto.Migrations
{
    [DbContext(typeof(AnalisisProyectoContext))]
    [Migration("20231115042946_CambioDuracionAString")]
    partial class CambioDuracionAString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("area");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    b.HasKey("Id")
                        .HasName("PK__area__3213E83F204CAC68");

                    b.HasIndex("InventoryId");

                    b.ToTable("area", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numeration")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("numeration");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Requirements")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("requirements");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__classroo__3213E83F5D82BCDE");

                    b.ToTable("classrooms", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ClassroomSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Day")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("day");

                    b.Property<TimeSpan?>("EndHour")
                        .HasColumnType("time")
                        .HasColumnName("end_hour");

                    b.Property<int?>("IdClassroom")
                        .HasColumnType("int")
                        .HasColumnName("id_classroom");

                    b.Property<TimeSpan?>("StartHour")
                        .HasColumnType("time")
                        .HasColumnName("start_hour");

                    b.HasKey("Id")
                        .HasName("PK__classroo__3213E83FA5364179");

                    b.HasIndex("IdClassroom");

                    b.ToTable("classroom_schedule", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ComputerEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("brand");

                    b.Property<string>("Class")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("class");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("date")
                        .HasColumnName("entry_date");

                    b.Property<string>("Include")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("include");

                    b.Property<DateTime?>("LastModifications")
                        .HasColumnType("date")
                        .HasColumnName("last_modifications");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("license_plate");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Observations")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observations");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("serial_number");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("PK__computer__3213E83F8B66061B");

                    b.ToTable("computer_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Copy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barcode");

                    b.Property<string>("Classification")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("classification");

                    b.Property<string>("Collection")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("collection");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("IdTitles")
                        .HasColumnType("int")
                        .HasColumnName("id_titles");

                    b.Property<string>("ItemStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("item_status");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("notes");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("SubLibrary")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sub_library");

                    b.HasKey("Id")
                        .HasName("PK__copy__3213E83F154913F7");

                    b.HasIndex("IdTitles");

                    b.ToTable("copy", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Furniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("furniture")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("furniture");

                    b.Property<int?>("id_study_room")
                        .HasColumnType("int")
                        .HasColumnName("id_study_room");

                    b.HasKey("Id")
                        .HasName("PK__furnitur__3213E83F43831C07");

                    b.HasIndex("id_study_room");

                    b.ToTable("furniture", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("Units")
                        .HasColumnType("int")
                        .HasColumnName("units");

                    b.HasKey("Id")
                        .HasName("PK__inventor__3213E83F34C54636");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.InventoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__inventor__3213E83FCC7DC832");

                    b.HasIndex("InventoryId");

                    b.ToTable("inventory_type", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LibraryUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Library")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("library");

                    b.Property<string>("Privilege")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("privilege");

                    b.Property<string>("TypeUser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_user");

                    b.HasKey("Id")
                        .HasName("PK__library___3213E83F8A2693CE");

                    b.HasIndex("IdUser");

                    b.ToTable("library_user", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date")
                        .HasColumnName("register_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("PK__loan__3213E83F893123D6");

                    b.ToTable("loan", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCopy")
                        .HasColumnType("int")
                        .HasColumnName("id_copy");

                    b.Property<int?>("IdLibraryUser")
                        .HasColumnType("int")
                        .HasColumnName("id_library_user");

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<DateTime?>("LimitFines")
                        .HasColumnType("date")
                        .HasColumnName("limit_fines");

                    b.Property<string>("Observation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observation");

                    b.Property<decimal?>("PhotocopyCharge")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("photocopy_charge");

                    b.Property<string>("SubLibrary")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sub_library");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__loan_boo__3213E83FAF530B67");

                    b.HasIndex("IdCopy");

                    b.HasIndex("IdLibraryUser");

                    b.HasIndex("IdLoan");

                    b.ToTable("loan_books", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanBookLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barcode");

                    b.Property<string>("BibliographicInformation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bibliographic_information");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<TimeSpan?>("Hour")
                        .HasColumnType("time")
                        .HasColumnName("hour");

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<int?>("IdUsers")
                        .HasColumnType("int")
                        .HasColumnName("id_users");

                    b.Property<decimal?>("Penalty")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("penalty");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<string>("SubLibrary")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sub_library");

                    b.HasKey("Id")
                        .HasName("PK__loan_boo__3213E83F2ED945BD");

                    b.HasIndex("IdLoan");

                    b.HasIndex("IdUsers");

                    b.ToTable("loan_book_log", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanClassroom", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("IdClassroom")
                        .HasColumnType("int")
                        .HasColumnName("id_classroom");

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<int?>("PersonQuantity")
                        .HasColumnType("int")
                        .HasColumnName("person_quantity");

                    b.HasKey("Id")
                        .HasName("PK__loan_cla__3213E83F1C9FA5E6");

                    b.HasIndex("IdClassroom");

                    b.HasIndex("IdLoan");

                    b.ToTable("loan_classrooms", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanComputerEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetEvaluation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("asset_evaluation");

                    b.Property<string>("Assets")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("assets");

                    b.Property<string>("Dependence")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dependence");

                    b.Property<string>("DestinationPlace")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("destination_place");

                    b.Property<int?>("IdComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_computer_equipment");

                    b.Property<int?>("IdLibraryUser")
                        .HasColumnType("int")
                        .HasColumnName("id_library_user");

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<string>("RequestActivity")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("request_activity");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("PK__loan_com__3213E83FC4D302B9");

                    b.HasIndex("IdComputerEquipment");

                    b.HasIndex("IdLibraryUser");

                    b.HasIndex("IdLoan");

                    b.ToTable("loan_computer_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<bool?>("Lightning")
                        .HasColumnType("bit")
                        .HasColumnName("lightning");

                    b.Property<string>("Materials")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("materials");

                    b.HasKey("Id")
                        .HasName("PK__loan_fie__3213E83F288E3255");

                    b.HasIndex("IdLoan");

                    b.HasIndex("IdUser");

                    b.ToTable("loan_field", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanSportsEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Materials")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("materials");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__loan_spo__3213E83FEE7317A0");

                    b.HasIndex("IdLoan");

                    b.HasIndex("IdUser");

                    b.ToTable("loan_sports_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanStudyRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<int?>("IdUserLibrary")
                        .HasColumnType("int")
                        .HasColumnName("id_user_library");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<int?>("NumberOfPeople")
                        .HasColumnType("int")
                        .HasColumnName("number_of_people");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<int?>("StudyRoomId")
                        .HasColumnType("int")
                        .HasColumnName("study_room_id");

                    b.HasKey("Id")
                        .HasName("PK__loan_stu__3213E83F90579D5C");

                    b.HasIndex("IdUserLibrary");

                    b.HasIndex("LoanId");

                    b.HasIndex("StudyRoomId");

                    b.ToTable("loan_study_room", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("ActivityType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("activity_type");

                    b.Property<string>("AssignedVehicle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("assigned_vehicle");

                    b.Property<string>("Destination")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("destination");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("date")
                        .HasColumnName("exit_date");

                    b.Property<TimeSpan?>("ExitHour")
                        .HasColumnType("time")
                        .HasColumnName("exit_hour");

                    b.Property<int?>("IdLoan")
                        .HasColumnType("int")
                        .HasColumnName("id_loan");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int?>("PersonQuantity")
                        .HasColumnType("int")
                        .HasColumnName("person_quantity");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date")
                        .HasColumnName("register_date");

                    b.Property<string>("Responsible")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("responsible");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("return_date");

                    b.Property<TimeSpan?>("ReturnHour")
                        .HasColumnType("time")
                        .HasColumnName("return_hour");

                    b.Property<string>("StartingPlace")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("starting_place");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("state");

                    b.Property<string>("UnityOrCarrer")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("unity_or_carrer");

                    b.HasKey("Id")
                        .HasName("PK__loan_veh__3213E83F5C45B1D1");

                    b.HasIndex("IdLoan");

                    b.HasIndex("IdUser");

                    b.ToTable("loan_vehicle", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__privileg__3213E83F2DBC5980");

                    b.ToTable("privileges", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ReportComputerEquipment", b =>
                {
                    b.Property<int?>("IdComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_computer_equipment");

                    b.Property<int?>("IdLoanEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_loan_equipment");

                    b.Property<int?>("IdReturnEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_return_equipment");

                    b.HasIndex("IdComputerEquipment");

                    b.HasIndex("IdLoanEquipment");

                    b.HasIndex("IdReturnEquipment");

                    b.ToTable("report_computer_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ReturnComputerEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Delay")
                        .HasColumnType("int")
                        .HasColumnName("delay");

                    b.Property<int?>("IdComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_computer_equipment");

                    b.Property<int?>("IdLibraryUser")
                        .HasColumnType("int")
                        .HasColumnName("id_library_user");

                    b.Property<DateTime?>("LimitDate")
                        .HasColumnType("date")
                        .HasColumnName("limit_date");

                    b.Property<DateTime?>("LoanDate")
                        .HasColumnType("date")
                        .HasColumnName("loan_date");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("return_date");

                    b.HasKey("Id")
                        .HasName("PK__return_c__3213E83F385230CE");

                    b.HasIndex("IdComputerEquipment");

                    b.HasIndex("IdLibraryUser");

                    b.ToTable("return_computer_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__role__3213E83F87D9164D");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.RolePrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PrivilegesId")
                        .HasColumnType("int")
                        .HasColumnName("privileges_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PK__role_pri__3213E83F3B5BF317");

                    b.HasIndex("PrivilegesId");

                    b.HasIndex("RoleId");

                    b.ToTable("role_privileges", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.SanctionComputerEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("IdReturnComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_return_computer_equipment");

                    b.Property<DateTime?>("SanctionExpiration")
                        .HasColumnType("date")
                        .HasColumnName("sanction_expiration");

                    b.Property<string>("SanctionType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sanction_type");

                    b.HasKey("Id")
                        .HasName("PK__sanction__3213E83FC3EA8225");

                    b.HasIndex("IdReturnComputerEquipment");

                    b.ToTable("sanction_computer_equipment", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.SanctionsReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLibraryUser")
                        .HasColumnType("int")
                        .HasColumnName("id_library_user");

                    b.Property<int?>("IdReturnComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_return_computer_equipment");

                    b.Property<int?>("IdSanctionComputerEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_sanction_computer_equipment");

                    b.HasKey("Id")
                        .HasName("PK__sanction__3213E83F1D95878F");

                    b.HasIndex("IdLibraryUser");

                    b.HasIndex("IdReturnComputerEquipment");

                    b.HasIndex("IdSanctionComputerEquipment");

                    b.ToTable("sanctions_report", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.StudyRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("isAvailable");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__study_ro__3213E83FFC182EAC");

                    b.ToTable("study_room", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.StudyRoomSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Day")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("day");

                    b.Property<string>("EndHour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("end_hour");

                    b.Property<int?>("IdStudyRoom")
                        .HasColumnType("int")
                        .HasColumnName("id_study_room");

                    b.Property<string>("StartHour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("start_hour");

                    b.HasKey("Id")
                        .HasName("PK__study_ro__3213E83F701452AA");

                    b.HasIndex("IdStudyRoom");

                    b.ToTable("study_room_schedule", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AssociatedDate")
                        .HasColumnType("date")
                        .HasColumnName("associated_date");

                    b.Property<string>("GeneralSubjectSubdivision")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("general_subject_subdivision");

                    b.Property<string>("Header")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("header");

                    b.Property<string>("Information")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("information");

                    b.Property<string>("Isbn")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ISBN");

                    b.Property<string>("MentionResponsibility")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mention_responsibility");

                    b.Property<int?>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<string>("PersonName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("person_name");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("date")
                        .HasColumnName("publication_date");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("publisher_name");

                    b.Property<string>("RestTitle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rest_title");

                    b.Property<string>("TermSubject")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("term_subject");

                    b.Property<string>("Title1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__titles__3213E83F1E7D6FF8");

                    b.ToTable("titles", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Userr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Career")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("career");

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("creation_date");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__userr__3213E83F87C1CAD7");

                    b.HasIndex("RoleId");

                    b.ToTable("userr", (string)null);
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Area", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Inventory", "Inventory")
                        .WithMany("Areas")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__area__inventory___5165187F");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ClassroomSchedule", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Classroom", "IdClassroomNavigation")
                        .WithMany("ClassroomSchedules")
                        .HasForeignKey("IdClassroom")
                        .HasConstraintName("FK__classroom__id_cl__6B24EA82");

                    b.Navigation("IdClassroomNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Copy", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Title", "IdTitlesNavigation")
                        .WithMany("Copies")
                        .HasForeignKey("IdTitles")
                        .HasConstraintName("FK__copy__id_titles__628FA481");

                    b.Navigation("IdTitlesNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Furniture", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.StudyRoom", "IdStudyRoomNavigation")
                        .WithMany("Furnitures")
                        .HasForeignKey("id_study_room")
                        .HasConstraintName("FK__furniture__furni__59063A47");

                    b.Navigation("IdStudyRoomNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.InventoryType", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Inventory", "Inventory")
                        .WithMany("InventoryTypes")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__inventory__inven__4E88ABD4");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LibraryUser", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUserNavigation")
                        .WithMany("LibraryUsers")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__library_u__id_us__4BAC3F29");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanBook", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Copy", "IdCopyNavigation")
                        .WithMany("LoanBooks")
                        .HasForeignKey("IdCopy")
                        .HasConstraintName("FK__loan_book__id_co__6EF57B66");

                    b.HasOne("AnalisisProyecto.Models.DB.LibraryUser", "IdLibraryUserNavigation")
                        .WithMany("LoanBooks")
                        .HasForeignKey("IdLibraryUser")
                        .HasConstraintName("FK__loan_book__id_li__6FE99F9F");

                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanBooks")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_book__id_lo__6E01572D");

                    b.Navigation("IdCopyNavigation");

                    b.Navigation("IdLibraryUserNavigation");

                    b.Navigation("IdLoanNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanBookLog", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanBookLogs")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_book__id_lo__5FB337D6");

                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUsersNavigation")
                        .WithMany("LoanBookLogs")
                        .HasForeignKey("IdUsers")
                        .HasConstraintName("FK__loan_book__id_us__5EBF139D");

                    b.Navigation("IdLoanNavigation");

                    b.Navigation("IdUsersNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanClassroom", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUserNavigation")
                        .WithMany("LoanClassrooms")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__loan_clas__id_us__7C4F7684");

                    b.HasOne("AnalisisProyecto.Models.DB.Classroom", "IdClassroomNavigation")
                        .WithMany("LoanClassrooms")
                        .HasForeignKey("IdClassroom")
                        .HasConstraintName("FK__loan_clas__id_cl__7B5B524B");

                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanClassrooms")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_clas__id_lo__7A672E12");

                    b.Navigation("IdClassroomNavigation");

                    b.Navigation("IdLoanNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanComputerEquipment", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.ComputerEquipment", "IdComputerEquipmentNavigation")
                        .WithMany("LoanComputerEquipments")
                        .HasForeignKey("IdComputerEquipment")
                        .HasConstraintName("FK__loan_comp__id_co__02084FDA");

                    b.HasOne("AnalisisProyecto.Models.DB.LibraryUser", "IdLibraryUserNavigation")
                        .WithMany("LoanComputerEquipments")
                        .HasForeignKey("IdLibraryUser")
                        .HasConstraintName("FK__loan_comp__id_li__03F0984C");

                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanComputerEquipments")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_comp__id_lo__02FC7413");

                    b.Navigation("IdComputerEquipmentNavigation");

                    b.Navigation("IdLibraryUserNavigation");

                    b.Navigation("IdLoanNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanField", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanFields")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_fiel__id_lo__72C60C4A");

                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUserNavigation")
                        .WithMany("LoanFields")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__loan_fiel__id_us__73BA3083");

                    b.Navigation("IdLoanNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanSportsEquipment", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanSportsEquipments")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_spor__id_lo__76969D2E");

                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUserNavigation")
                        .WithMany("LoanSportsEquipments")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__loan_spor__id_us__778AC167");

                    b.Navigation("IdLoanNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanStudyRoom", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.LibraryUser", "IdUserLibraryNavigation")
                        .WithMany("LoanStudyRooms")
                        .HasForeignKey("IdUserLibrary")
                        .HasConstraintName("FK__loan_stud__id_us__5535A963");

                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "Loan")
                        .WithMany("LoanStudyRooms")
                        .HasForeignKey("LoanId")
                        .HasConstraintName("FK__loan_stud__loan___5441852A");

                    b.HasOne("AnalisisProyecto.Models.DB.StudyRoom", "StudyRoom")
                        .WithMany("LoanStudyRooms")
                        .HasForeignKey("StudyRoomId")
                        .HasConstraintName("FK__loan_stud__study__5629CD9C");

                    b.Navigation("IdUserLibraryNavigation");

                    b.Navigation("Loan");

                    b.Navigation("StudyRoom");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LoanVehicle", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanNavigation")
                        .WithMany("LoanVehicles")
                        .HasForeignKey("IdLoan")
                        .HasConstraintName("FK__loan_vehi__id_lo__7E37BEF6");

                    b.HasOne("AnalisisProyecto.Models.DB.Userr", "IdUserNavigation")
                        .WithMany("LoanVehicles")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__loan_vehi__id_us__7F2BE32F");

                    b.Navigation("IdLoanNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ReportComputerEquipment", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.ComputerEquipment", "IdComputerEquipmentNavigation")
                        .WithMany()
                        .HasForeignKey("IdComputerEquipment")
                        .HasConstraintName("FK__report_co__id_co__6477ECF3");

                    b.HasOne("AnalisisProyecto.Models.DB.Loan", "IdLoanEquipmentNavigation")
                        .WithMany()
                        .HasForeignKey("IdLoanEquipment")
                        .HasConstraintName("FK__report_co__id_lo__66603565");

                    b.HasOne("AnalisisProyecto.Models.DB.ComputerEquipment", "IdReturnEquipmentNavigation")
                        .WithMany()
                        .HasForeignKey("IdReturnEquipment")
                        .HasConstraintName("FK__report_co__id_re__656C112C");

                    b.Navigation("IdComputerEquipmentNavigation");

                    b.Navigation("IdLoanEquipmentNavigation");

                    b.Navigation("IdReturnEquipmentNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ReturnComputerEquipment", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.ComputerEquipment", "IdComputerEquipmentNavigation")
                        .WithMany("ReturnComputerEquipments")
                        .HasForeignKey("IdComputerEquipment")
                        .HasConstraintName("FK__return_co__id_co__07C12930");

                    b.HasOne("AnalisisProyecto.Models.DB.LibraryUser", "IdLibraryUserNavigation")
                        .WithMany("ReturnComputerEquipments")
                        .HasForeignKey("IdLibraryUser")
                        .HasConstraintName("FK__return_co__id_li__06CD04F7");

                    b.Navigation("IdComputerEquipmentNavigation");

                    b.Navigation("IdLibraryUserNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.RolePrivilege", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Privilege", "Privileges")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegesId")
                        .HasConstraintName("FK__role_priv__privi__3F466844");

                    b.HasOne("AnalisisProyecto.Models.DB.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__role_priv__role___3E52440B");

                    b.Navigation("Privileges");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.SanctionComputerEquipment", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.ReturnComputerEquipment", "IdReturnComputerEquipmentNavigation")
                        .WithMany("SanctionComputerEquipments")
                        .HasForeignKey("IdReturnComputerEquipment")
                        .HasConstraintName("FK__sanction___id_re__0A9D95DB");

                    b.Navigation("IdReturnComputerEquipmentNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.SanctionsReport", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.LibraryUser", "IdLibraryUserNavigation")
                        .WithMany("SanctionsReports")
                        .HasForeignKey("IdLibraryUser")
                        .HasConstraintName("FK__sanctions__id_li__0D7A0286");

                    b.HasOne("AnalisisProyecto.Models.DB.ReturnComputerEquipment", "IdReturnComputerEquipmentNavigation")
                        .WithMany("SanctionsReports")
                        .HasForeignKey("IdReturnComputerEquipment")
                        .HasConstraintName("FK__sanctions__id_re__0F624AF8");

                    b.HasOne("AnalisisProyecto.Models.DB.SanctionComputerEquipment", "IdSanctionComputerEquipmentNavigation")
                        .WithMany("SanctionsReports")
                        .HasForeignKey("IdSanctionComputerEquipment")
                        .HasConstraintName("FK__sanctions__id_sa__0E6E26BF");

                    b.Navigation("IdLibraryUserNavigation");

                    b.Navigation("IdReturnComputerEquipmentNavigation");

                    b.Navigation("IdSanctionComputerEquipmentNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.StudyRoomSchedule", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.StudyRoom", "IdStudyRoomNavigation")
                        .WithMany("StudyRoomSchedules")
                        .HasForeignKey("IdStudyRoom")
                        .HasConstraintName("FK__study_roo__id_st__5BE2A6F2");

                    b.Navigation("IdStudyRoomNavigation");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Userr", b =>
                {
                    b.HasOne("AnalisisProyecto.Models.DB.Role", "Role")
                        .WithMany("Userrs")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__userr__role_id__398D8EEE");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Classroom", b =>
                {
                    b.Navigation("ClassroomSchedules");

                    b.Navigation("LoanClassrooms");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ComputerEquipment", b =>
                {
                    b.Navigation("LoanComputerEquipments");

                    b.Navigation("ReturnComputerEquipments");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Copy", b =>
                {
                    b.Navigation("LoanBooks");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Inventory", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("InventoryTypes");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.LibraryUser", b =>
                {
                    b.Navigation("LoanBooks");

                    b.Navigation("LoanComputerEquipments");

                    b.Navigation("LoanStudyRooms");

                    b.Navigation("ReturnComputerEquipments");

                    b.Navigation("SanctionsReports");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Loan", b =>
                {
                    b.Navigation("LoanBookLogs");

                    b.Navigation("LoanBooks");

                    b.Navigation("LoanClassrooms");

                    b.Navigation("LoanComputerEquipments");

                    b.Navigation("LoanFields");

                    b.Navigation("LoanSportsEquipments");

                    b.Navigation("LoanStudyRooms");

                    b.Navigation("LoanVehicles");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.ReturnComputerEquipment", b =>
                {
                    b.Navigation("SanctionComputerEquipments");

                    b.Navigation("SanctionsReports");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Role", b =>
                {
                    b.Navigation("RolePrivileges");

                    b.Navigation("Userrs");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.SanctionComputerEquipment", b =>
                {
                    b.Navigation("SanctionsReports");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.StudyRoom", b =>
                {
                    b.Navigation("Furnitures");

                    b.Navigation("LoanStudyRooms");

                    b.Navigation("StudyRoomSchedules");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Title", b =>
                {
                    b.Navigation("Copies");
                });

            modelBuilder.Entity("AnalisisProyecto.Models.DB.Userr", b =>
                {
                    b.Navigation("LibraryUsers");

                    b.Navigation("LoanBookLogs");

                    b.Navigation("LoanClassrooms");

                    b.Navigation("LoanFields");

                    b.Navigation("LoanSportsEquipments");

                    b.Navigation("LoanVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
